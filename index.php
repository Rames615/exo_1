<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Exercise sur POO</title>
    <link rel="stylesheet" href="style.css">
</head>

<body>
    <h1>Des exercises pratiques sur programmation orient√©e objet [POO]</h1>
    <h2>üìÜJour-1</h2>
    <section>
        <h3>Exercise-1: Cr√©ez une classe JeuVideo avec nom, prix et plateforme. Instanciez "Call of Duty" √† 60‚Ç¨ sur PS5.</h3>

        <?php
         class JeuVideo
        {
            // Propri√©t√©s de la classe
            private string $nom;
            private float $prix;
            private string $plateforme;

            // Constructeur pour initialiser les propri√©t√©s
            public function __construct(string $nom, float $prix, string $plateforme)
            {
                $this->nom = $nom;
                $this->prix = $prix;
                $this->plateforme = $plateforme;
            }

            // M√©thode pour afficher les informations du jeu
            public function afficherInfos(): void
            {
                echo "Nom du jeu : " . $this->nom . "<br>";
                echo "Prix : " . $this->prix . " ‚Ç¨<br>";
                echo "Plateforme : " . $this->plateforme . "<br>";
            }
        }

        // Instanciation d‚Äôun objet JeuVideo
        $jeu1 = new JeuVideo("Call of Duty", 60, "PS5");

        // Appel de la m√©thode pour afficher les infos du jeu
        $jeu1->afficherInfos();
        ?>
    </section>

    <section>
        <h3>Exercise-2: Ajoutez une m√©thode pour v√©rifier si le jeu est en stock. Si stock < 1, afficher "Rupture" .</h3>
                <?php
                class JeuVideo_1
                {
                    //vproppri√©t√©s de la classe
                    private string $nom;
                    private float $prix;
                    private string $plateforme;
                    private int $stock;

                    // constructeur pour initialiser les propri√©t√©s
                    public function __construct(string $nom, float $prix, string $plateforme, int $stock)
                    {
                        $this->nom = $nom;
                        $this->prix = $prix;
                        $this->plateforme = $plateforme;
                        $this->stock = $stock;
                    }

                    // m√©thode pour afficher les informations du jeu
                    public function afficherInfos(): void
                    {
                        echo "Nom du jeu : " . $this->nom . "<br>";
                        echo "Prix : " . $this->prix . " ‚Ç¨<br>";
                        echo "Plateforme : " . $this->plateforme . "<br>";
                        echo "Stock : " . $this->stock . "<br>";
                    }

                    // m√©thode pour v√©rifier le stock
                    public function verifierStock(): void
                    {
                        if ($this->stock < 1) {
                            echo "‚ùå Rupture de stock<br>";
                        } else {
                            echo "‚úÖ En stock (" . $this->stock . " disponibles)<br>";
                        }
                    }
                }

                // Instanciation de l‚Äôobjet avec un stock donn√©
                $jeu1 = new JeuVideo_1("Call of Duty", 60, "PS5", 3);
                $jeu2 = new JeuVideo_1("FIFA 25", 70, "PS5", 0);

                // Affichage des infos et v√©rification du stock
                $jeu1->afficherInfos();
                $jeu1->verifierStock();

                echo "<hr>";

                $jeu2->afficherInfos();
                $jeu2->verifierStock();
                ?>

    </section>

    <section>
        <h3>Exercise-3: Cr√©ez 5 jeux diff√©rents et affichez leurs informations compl√®tes. </h3>
                <?php
                class JeuVideo2
                {
                    private string $nom;
                    private float $prix;
                    private string $plateforme;
                    private int $stock;
                
                    public function __construct(string $nom, float $prix, string $plateforme, int $stock)
                    {
                        $this->nom = $nom;
                        $this->prix = $prix;
                        $this->plateforme = $plateforme;
                        $this->stock = $stock;
                    }
                
                    public function afficherInfos(): void
                    {
                        echo "<div style='border:1px solid #ccc; padding:10px; margin-bottom:10px; border-radius:8px;'>";
                        echo "<strong>Nom du jeu :</strong> " . $this->nom . "<br>";
                        echo "<strong>Prix :</strong> " . $this->prix . " ‚Ç¨<br>";
                        echo "<strong>Plateforme :</strong> " . $this->plateforme . "<br>";
                        echo "<strong>Stock :</strong> " . $this->stock . "<br>";
                        echo "</div>";
                    }
                
                    public function verifierStock(): void
                    {
                        if ($this->stock < 1) {
                            echo "‚ùå Rupture de stock<br>";
                        } else {
                            echo "‚úÖ En stock (" . $this->stock . " disponibles)<br>";
                        }
                    }
                }
                
                // Cr√©ation de plusieurs jeux (instances)
                $catalogue = [
                    new JeuVideo2("Call of Duty", 60, "PS5", 3),
                    new JeuVideo2("FIFA 25", 70, "PS5", 5),
                    new JeuVideo2("Tears of the Kingdom", 59.99, "Nintendo Switch", 2),
                    new JeuVideo2("GTA VI", 89.99, "PS5", 0),
                    new JeuVideo2("Elden Ring", 49.99, "PC", 4),
                ];
                
                // Affichage du catalogue avec une boucle foreach
                echo "<h2>üéÆ Catalogue de jeux vid√©o</h2>";
                
                foreach ($catalogue as $jeu) {
                    $jeu->afficherInfos();
                    $jeu->verifierStock();
                    echo "<hr>";
                }
                
                ?>

    </section>

     <h2>üìÜJour-2</h2>
    <section>
        <h3>Exercise-1: Rendez les propri√©t√©s priv√©es et cr√©ez des getters/setters. Le prix ne peut √™tre n√©gatif. </h3>

        <?php
            class JeuVideo3
            {
                // Propri√©t√©s priv√©es (encapsulation)
                private string $nom;
                private float $prix;
                private string $plateforme;
                private int $stock;
            
                // üîß Constructeur
                public function __construct(string $nom, float $prix, string $plateforme, int $stock)
                {
                    $this->setNom($nom);
                    $this->setPrix($prix);
                    $this->setPlateforme($plateforme);
                    $this->setStock($stock);
                }
            
                // üß† Getters (pour lire les valeurs)
                public function getNom(): string
                {
                    return $this->nom;
                }
            
                public function getPrix(): float
                {
                    return $this->prix;
                }
            
                public function getPlateforme(): string
                {
                    return $this->plateforme;
                }
            
                public function getStock(): int
                {
                    return $this->stock;
                }
            
                // üß± Setters (pour modifier les valeurs avec contr√¥le)
                public function setNom(string $nom): void
                {
                    $this->nom = $nom;
                }
            
                public function setPrix(float $prix): void
                {
                    if ($prix < 0) {
                        echo "‚ö†Ô∏è Erreur : le prix ne peut pas √™tre n√©gatif.<br>";
                        $this->prix = 0; // on peut mettre 0 par d√©faut
                    } else {
                        $this->prix = $prix;
                    }
                }
            
                public function setPlateforme(string $plateforme): void
                {
                    $this->plateforme = $plateforme;
                }
            
                public function setStock(int $stock): void
                {
                    $this->stock = $stock;
                }
            
                // M√©thode pour afficher les infos du jeu
                public function afficherInfos(): void
                {
                    echo "<div style='border:1px solid #ccc; padding:10px; margin-bottom:10px; border-radius:8px;'>";
                    echo "<strong>Nom :</strong> " . $this->getNom() . "<br>";
                    echo "<strong>Prix :</strong> " . $this->getPrix() . " ‚Ç¨<br>";
                    echo "<strong>Plateforme :</strong> " . $this->getPlateforme() . "<br>";
                    echo "<strong>Stock :</strong> " . $this->getStock() . "<br>";
                    echo "</div>";
                }
            }
    
            // ‚úÖ Test avec validation
            $jeu1 = new JeuVideo3("Call of Duty", 60, "PS5", 3);
            $jeu2 = new JeuVideo3("FIFA 25", -10, "PS5", 5); // prix n√©gatif volontaire
            
            $jeu1->afficherInfos();
            $jeu2->afficherInfos();
            
            // üîÅ Test du setter apr√®s instanciation
            $jeu1->setPrix(-50); // devrait afficher un message d‚Äôerreur
            $jeu1->afficherInfos();
        ?>
    </section>

    <section>
        <h3>Exercise-2: </h3>
                <?php
                
                ?>

    </section>
    <section>
        <h3>Exercise-3:  </h3>
                <?php
                ?>
    </section>
</body>

</html>